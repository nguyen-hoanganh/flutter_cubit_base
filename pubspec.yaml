name: base_flutter_core
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.6 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  #  architecture
  flutter_bloc: ^8.0.1 # Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern. Built to be used with the bloc state management package.  go_router: ^10.1.0
  go_router: ^10.0.0 #  A declarative router for Flutter based on Navigation 2 supporting deep linking, data-driven routes and more

  # dependency injection
  get_it: ^7.6.0 # Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the concrete implementation from everywhere in your App
  injectable: ^2.1.2 # a convenient code generator for get_it. Inspired by Angular DI, Guice DI and inject.dart.

  # For Firebase
  firebase_core: 1.20.1 # Flutter plugin for Firebase Core, enabling connecting to multiple Firebase apps.
  firebase_messaging: 12.0.2 # Flutter plugin for Firebase Cloud Messaging, a cross-platform messaging solution that lets you reliably deliver messages on Android and iOS.
  flutter_local_notifications: 9.7.0 # A cross platform plugin for displaying and scheduling local notifications for Flutter applications with the ability to customise for each platform.
  firebase_core_platform_interface: 4.5.1 #
    #  networking
  dio: ^4.0.1 # A powerful Http client for Dart, which supports Interceptors, FormData, Request Cancellation, File Downloading, Timeout etc.
  retrofit: ^3.0.1+1 # retrofit.dart is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  #
  package_info_plus: ^4.0.0 #Flutter plugin for querying information about the application package, such as CFBundleVersion on iOS or versionCode on Android.
  connectivity_plus: ^2.3.6+1 # Flutter plugin for discovering the state of the network (WiFi & mobile/cellular) connectivity on Android and iOS.
  permission_handler: ^11.0.1 #Permission plugin for Flutter. This plugin provides a cross-platform (iOS, Android) API to request and check permissions.

  #  model
  equatable: ^2.0.3 # A Dart package that helps to implement value based equality without needing to explicitly override == and hashCode.
  json_annotation: ^4.5.0 # Classes and helper functions that support JSON code generation via the `json_serializable` package.
  freezed_annotation: ^2.1.0 # Annotations for the freezed code-generator. This package does nothing without freezed too.
  #
  # pointycastle: ^3.7.3 #A Dart library implementing cryptographic algorithms and primitives, modeled on the BouncyCastle library.
  # encrypt: ^5.0.1 #A set of high-level APIs over PointyCastle for two-way cryptography.
  # uuid: ^4.0.0 # RFC4122 (v1, v4, v5, v6, v7, v8) UUID Generator and Parser for Dart
  # url_launcher: ^6.1.6 #A Flutter plugin for launching a URL.

  # For multiple languages
  intl: ^0.17.0 # Contains code to deal with internationalized/localized messages, date and number formatting and parsing, bi-directional text, and other internationalization issues.
  multiple_localization: ^0.3.0 # Support for multiple abr and messages localization files for intl package.

  # For UIs
  logger: ^1.1.0 # Small, easy to use and extensible logger which prints beautiful logs.
  flutter_svg: ^1.1.3 # An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files.
  gap: 2.0.0 # Flutter widgets for easily adding gaps inside Flex widgets such as Columns and Rows or scrolling views.
  overlay_support: ^2.0.1 # Provider support for overlay, easy to build toast and internal notification
  lottie: ^2.3.1 # Render After Effects animations natively on Flutter. This package is a pure Dart implementation of a Lottie player.
  cached_network_image: ^3.2.2 # Show images from the internet and keep them in the cache directory
  dotted_border: ^2.0.0+3
  carousel_slider: ^4.2.1
  expandable: ^5.0.1
  just_the_tooltip: ^0.0.12 # A multi directional tooltip used to display any content with inbuilt support for list views
  local_auth: ^2.1.6
  local_auth_android: ^1.0.31
  local_auth_ios: ^1.1.3
  flutter_secure_storage: ^8.1.0
  # device_info_plus: ^9.0.3
  #For db
  shared_preferences: ^2.1.1 # Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.

  screenshot: ^1.2.3 # Capture widgets as Images not rendered on the screen
  image_gallery_saver: ^1.7.1 # Save screenshot images to the gallery
  path_provider: ^2.0.11 # Flutter plugin for getting commonly used locations on host platform file systems, such as the temp and app data directories.
  share_plus: ^7.1.0 # Flutter plugin for sharing content via the platform share UI, using the ACTION_SEND intent on Android and UIActivityViewController on iOS.
  flutter_jailbreak_detection: ^1.10.0 #Flutter jailbreak and root detection plugin. This plugin wraps Rootbeer for use on Android and DTTJailbreakDetection for use on iOS.
  secure_application: ^3.8.0
  app_tracking_transparency: 2.0.4 # This Flutter plugin allows you to display ios tracking authorization dialogue and request permission to collect data.
  #======Packages Local ==========#

  sizer: # Flutter Sizer helps implement a reponsive layout by providing helper widgets and extensions.
    path: ./packages/flutter_sizer
  device_info_plus: # Flutter plugin providing detailed information about the device (make, model, etc.), and Android or iOS version the app is running on.
    path: ./packages/device_info_plus

  modal_bottom_sheet: ^2.1.2
  another_stepper: ^1.2.2
  app_settings: ^5.1.1
  url_launcher: ^6.1.11
  grouped_list: ^4.0.0
  get_ip_address: ^0.0.5
  flutter_slidable: ^2.0.0
  encrypt: ^5.0.1
  pointycastle: ^3.7.3
  flutter_html: ^3.0.0-alpha.6
  pull_to_refresh: ^2.0.0
  collection: ^1.16.0
  smooth_page_indicator: ^1.1.0
  # carrier_info: ^2.0.8
  geolocator: ^10.1.0
  phone_numbers_parser: ^7.0.2
  fluttercontactpicker: ^4.7.0
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  
  # For generate files
  build_runner: ^2.2.0 # A build system for Dart code generation and modular compilation.
  freezed: ^2.1.0+1 # Code generation for immutable classes that has a simple syntax/API without compromising on the features.
  injectable_generator: ^2.1.4 # A generator for injectable library.
  json_serializable: ^6.5.4 # Automatically generate code for converting to and from JSON by annotating Dart classes.
  retrofit_generator: ^4.2.0 # Automatically generate code for retrofit
  # For generate assets
  flutter_gen_runner: ^4.3.0 # The Flutter code generator for your assets, fonts, colors, … — Get rid of all String-based APIs.


flutter_gen:
  integrations:
    flutter_svg: true
    rive: true
    theme: true
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  uses-material-design: true


  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svgs/
    - assets/lottie/
    - assets/
  
  fonts:
    - family: Roboto
      fonts:
        - asset: assets/fonts/roboto/Roboto-Regular.ttf
        - asset: assets/fonts/roboto/Roboto-Thin.ttf
        - asset: assets/fonts/roboto/Roboto-Medium.ttf
        - asset: assets/fonts/roboto/Roboto-Bold.ttf
    - family: DINpro
      fonts:
        - asset: assets/fonts/din_pro/DINPro-BlackItalic.ttf
        - asset: assets/fonts/din_pro/DINPro-Bold.ttf
        - asset: assets/fonts/din_pro/DINPro-BoldItalic.ttf
        - asset: assets/fonts/din_pro/DINPro-Medium.ttf
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
